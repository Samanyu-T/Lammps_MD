# Boilerplate code generated by OVITO 3.1.3
from ovito.io import *
from ovito.modifiers import *
from ovito.data import *
from ovito.pipeline import *

import numpy as np
import sys, os, glob
 
def main(fpath):

    # idx = fpath.split('.')[1]

    # sfolder = os.path.dirname(fpath)

    # sfile = "int_%s.txt" % idx

    # spath = os.path.join(os.path.join(sfolder, sfile))

    # print ("Processing %s, exporting interstitial cluster data into %s" % (fpath, spath))
    
    # Data import:
    # pipeline = import_file(fpath)
    pipeline = import_file('/Users/cd8607/Documents/Lammps_MD/w_220_atom_files/w_220_cascade.*.ws.xyz')

    # Expression selection:
    pipeline.modifiers.append(ExpressionSelectionModifier(expression = 'ParticleType==1'))

    # Delete selected:
    pipeline.modifiers.append(DeleteSelectedModifier())

    # Cluster analysis:
    pipeline.modifiers.append(ClusterAnalysisModifier(
        cutoff = 5.4, 
        sort_by_size = True, 
        cluster_coloring = True))

    # Export results of the clustering algorithm to a text file:
    export_file(pipeline, 'output/clusters.txt', 'txt/table', key='clusters')

    # data = pipeline.compute()

    # cluster_table = data.tables['clusters']

    # cluster_sizes = np.array(cluster_table['Cluster Size'][...])

    # print(cluster_sizes[0])

    # np.savetxt(spath, cluster_sizes)
    
if __name__=="__main__":
    
    main(sys.argv[1])
